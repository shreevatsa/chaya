<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Chāyā: Transcribe PDFs with OCR</title>
  <style>
    body {
      padding: 1em;
      font-family: helvetica, sans-serif;
      line-height: 1.3;
    }

    .dropzone {
      box-sizing: border-box;
      width: 100%;
      min-height: 3em;
      border: 2px dashed #ccc;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 24px;
      cursor: pointer;
      padding: 1em;
      margin-bottom: 2em;
    }

    .dropzone p {
      margin: 0;
    }

    .dropzone.disabled {
      cursor: not-allowed;
    }

    .dropzone.drag-over {
      background-color: pink;
    }

    .dropzone p.inline {
      display: inline-block;
    }

    .button {
      font-size: 18px;
      color: #fff;
      background-color: #007bff;
      /* Use a distinct, eye-catching color */
      padding: 1em;
      border: none;
      border-radius: 0.25em;
      transition: background-color 0.3s;
      margin-bottom: 2em;
    }

    .button:hover,
    .button:focus {
      background-color: #0056b3;
      /* Darken the color on hover/focus for feedback */
      outline: none;
      /* Remove the default focus outline */
    }

    .button:active {
      background-color: #004494;
      /* Even darker when clicked */
      transform: translateY(2px);
      /* Slight push effect when active */
    }

    /* Optionally, you can also style the button to be full-width on mobile screens */
    @media (max-width: 768px) {
      .button {
        display: block;
        width: 100%;
      }
    }
  </style>
  <style>
    .ProseMirror {
      padding: 4px 8px;
      height: 100%;
    }

    /* From https://cdn.jsdelivr.net/npm/prosemirror-view@1.27.0/style/prosemirror.css =
    https://github.com/ProseMirror/prosemirror-view/blob/c47178c/style/prosemirror.css */
    .ProseMirror {
      position: relative;
    }

    .ProseMirror {
      word-wrap: break-word;
      white-space: pre-wrap;
      white-space: break-spaces;
      -webkit-font-variant-ligatures: none;
      font-variant-ligatures: none;
      font-feature-settings: "liga" 0;
      /* the above doesn't seem to work in Edge */
    }

    .ProseMirror pre {
      white-space: pre-wrap;
    }

    .ProseMirror li {
      position: relative;
    }

    .ProseMirror-hideselection *::selection {
      background: transparent;
    }

    .ProseMirror-hideselection *::-moz-selection {
      background: transparent;
    }

    .ProseMirror-hideselection {
      caret-color: transparent;
    }

    .ProseMirror-selectednode {
      outline: 2px solid #8cf;
    }

    /* Make sure li selections wrap around markers */
    li.ProseMirror-selectednode {
      outline: none;
    }

    li.ProseMirror-selectednode:after {
      content: "";
      position: absolute;
      left: -32px;
      right: -2px;
      top: -2px;
      bottom: -2px;
      border: 2px solid #8cf;
      pointer-events: none;
    }

    /* Protect against generic img rules */
    img.ProseMirror-separator {
      display: inline !important;
      border: none !important;
      margin: 0 !important;
    }

    .page {
      display: flex;
    }

    .page-image {
      outline: 1px dotted green;
    }

    .page-contents {
      outline: 1px dotted blue;
    }
  </style>
</head>

<body>
  <h1>Chāyā</h1>

  <p>This is a tool to “transcribe” a PDF file into paragraphs (etc.) that remain associated with regions of the
    original pages. (This way, one can verify or edit the transcription at any time.)</p>

  <!-- File input element for PDF: not displayed; use through the dropzone. -->
  <input type="file" id="fileInput" accept=".pdf" style="display: none;" />
  <div class="dropzone" id="dropzone">
    <p>Drag and drop a PDF file here or click to select a file.</p>
  </div>
  <!-- File input element for chaya: not displayed; use through the dropzone. -->
  <input type="file" id="fileInputSc" accept=".chaya" style="display: none;" />
  <div class="dropzone" id="dropzoneSc" style="display: none;">
    <p>Drag and drop a <code>.chaya</code> file here or click to select a file, or <a href="" id="newSc">create new</a>.
    </p>
  </div>
  <div class="dropzone" id="ocrForm" style="display: none;">
    <form>
      <p class="inline">
        <input type="radio" id="useTesseract" name="ocrOption" value="tesseract" checked>
        <label for="useTesseract">Use Tesseract <a
            href="https://tesseract-ocr.github.io/tessdoc/Data-Files-in-different-versions.html">(lang)</a></label>
        <input type="text" id="tesseractLanguage" name="tesseractLanguage" placeholder="(eng, san, kan+eng, etc.)"></input>
      </p>
      <p class="inline">
        <input type="radio" id="useGoogleOcr" name="ocrOption" value="googleOcr">
        <label for="useGoogleOcr">Use Google OCR</label>
        <input type="text" id="apiKey" name="apiKey" placeholder="Google API Key">
      </p>
      <button type="button" id="ocrFormProcess">Process</button>
    </form>
  </div>
  <button class="button" id="saveSc" style="display: none;">Save the current <code>.chaya</code> file</button>
  <div id="docView"></div>
  <!-- This script is at the bottom so that nothing comes after the huge blob. -->
  <script defer type="module" src="main.js"></script>
</body>

</html>
